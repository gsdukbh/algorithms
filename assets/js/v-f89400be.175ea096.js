(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[439],{3123:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-f89400be",path:"/leetcode/Thirteen.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一般方法",slug:"一般方法",children:[]}],filePathRelative:"leetcode/Thirteen.md",git:{updatedTime:1622450691e3,contributors:[]}}},2507:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="python3"><a class="header-anchor" href="#python3">#</a> Python3</h1><h2 id="一般方法"><a class="header-anchor" href="#一般方法">#</a> 一般方法</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>\n<span class="token keyword">def</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>\n    lo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;V&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;IV&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;IX&#39;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">&#39;XL&#39;</span><span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&#39;XC&#39;</span><span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;CD&#39;</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;CM&#39;</span><span class="token punctuation">:</span> <span class="token number">900</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token punctuation">}</span>\n    res<span class="token operator">=</span><span class="token number">0</span>\n    i<span class="token operator">=</span><span class="token number">0</span>\n    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">if</span> i<span class="token operator">&lt;</span> n<span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> lo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> lo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n            res <span class="token operator">+=</span> lo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n            i <span class="token operator">+=</span> <span class="token number">2</span>\n        <span class="token keyword">else</span><span class="token punctuation">:</span>\n            res <span class="token operator">+=</span> lo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>\n            i <span class="token operator">+=</span> <span class="token number">1</span>\n    <span class="token keyword">return</span> res\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',3),t={render:function(n,s){return p}}}}]);