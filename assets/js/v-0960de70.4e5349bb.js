(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1436],{9740:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-0960de70",path:"/leetcode/CountBinarySubstrings.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"计数二进制子串",slug:"计数二进制子串",children:[]}],filePathRelative:"leetcode/CountBinarySubstrings.md",git:{updatedTime:1622450691e3,contributors:[]}}},5082:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h2 id="计数二进制子串"><a class="header-anchor" href="#计数二进制子串">#</a> 计数二进制子串</h2><p>连续子字串相同1，0的数量。</p><p><a href="../../../leetcode/app/src/main/java/top/werls/leetcode/CountBinarySubstrings.java">代码</a></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">countBinarySubstrings</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">int</span> ptr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> last <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>ptr <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token keyword">while</span> <span class="token punctuation">(</span>ptr <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span> <span class="token operator">==</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token operator">++</span>ptr<span class="token punctuation">;</span>\n                <span class="token operator">++</span>count<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            ans <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> last<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            last <span class="token operator">=</span> count<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',4),t={render:function(n,s){return p}}}}]);